{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Charts/ChartBar.js","components/Charts/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Expenses/Expenses.js","components/NewExpenses/ExpenseForm.js","components/NewExpenses/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barHeightFill","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","max","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","amount","Expensedate","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","ExpenseList","length","id","Expenses","useState","filterData","setFilterData","filteredExpenses","filter","enteredFilteData","ExpenseForm","setTitle","setAmount","setDate","onSubmit","preventDefault","Date","onSaveExpenseData","type","console","log","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","onAddExpense","DUMMY_EXPENSES","App","setexpenses","expenseData","random","toString","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32722732.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import \"./ExpenseFilter.css\";\r\n\r\nfunction ExpenseFilter(props) {\r\n  const dropDownHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropDownHandler}>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseFilter;\r\n","import \"./ChartBar.css\";\r\n\r\nfunction ChartBar(props) {\r\n  let barHeightFill = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barHeightFill = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barHeightFill }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nfunction Chart(props) {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const maxValue = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={maxValue}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import Chart from \"../Charts/Chart\";\r\n\r\nfunction ExpensesChart(props) {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // returns int from 0 to 11\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n}\r\n\r\nexport default ExpensesChart;\r\n","import \"./ExpenseDate.css\";\r\n\r\nfunction Expensedate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expensedate;\r\n","import ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\nimport Card from \"../UI/Card\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">{props.amount} Rs</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import \"./ExpenseList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nfunction ExpenseList(props) {\r\n  if (props.expenses.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expense found.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.expenses.map((expense) => {\r\n        return (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ExpenseList;\r\n","import { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport ExpenseList from \"./ExpenseList\";\r\n\r\nfunction Expenses(props) {\r\n  const [filterData, setFilterData] = useState(\"2019\");\r\n\r\n  const onChangeFilterHandler = (enteredFilteData) => {\r\n    setFilterData(enteredFilteData);\r\n  };\r\n\r\n  const filteredExpenses = props.expenses.filter((expense) => {\r\n    return expense.date.getFullYear() == filterData;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter\r\n          selected={filterData}\r\n          onChangeFilter={onChangeFilterHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpenseList expenses={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nfunction ExpenseForm(props) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    console.log(title);\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    console.log(amount);\r\n    setAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    console.log(date);\r\n    setDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expense = {\r\n      title: title,\r\n      amount: amount, // TODO: change {amount:amount} to {amount:+amount} to convert amount from string to number\r\n      date: new Date(date),\r\n    };\r\n\r\n    setTitle(\"\");\r\n    setAmount(\"\");\r\n    setDate(\"\");\r\n\r\n    props.onSaveExpenseData(expense);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={title} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            step=\"1\"\r\n            value={amount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={date}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nfunction NewExpense(props) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const onSaveHandler = (expense) => {\r\n    props.onAddExpense(expense);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={onSaveHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpenses/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setexpenses] = useState(DUMMY_EXPENSES);\n\n  const onAddExpenseHandler = (expense) => {\n    const expenseData = {\n      ...expense,\n      id: Math.random().toString(),\n    };\n\n    setexpenses((prevExpenses) => {\n      return [expenseData, ...prevExpenses];\n    });\n\n    console.log(expenseData);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={onAddExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}